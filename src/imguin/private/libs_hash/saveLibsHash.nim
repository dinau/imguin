import std/[os,strutils,osproc,strformat]
const cmdGetHash = "git show --format='%H' --no-patch"

const LIBS_DIR = "../../../../../libs"

var libDirs = @[
                "cimgui",
                "cimgui/imgui",
                "cimgui_toggle",
                "CImGuiFileDialog",
                "cimguizmo",
                "cimnodes",
                "cimplot",
                "cimplot3d",
                "cimspinner",
                "cimCTE",
              ]

var sOutHeader = fmt"""
#
# This file has been auto generated by 'saveLibsHash.nim'.
# Don't edit this file.
#
all:
	@echo Usage:
	@echo   make savehash     -- Generate current libs hash.
	@echo   make checkout     -- Checkout current hash libs listed in this Makefile.

.PHONY: genhash checkout

savehash:
	nim r saveLibsHash.nim

EXT_LIBS_DIR = {LIBS_DIR}

checkout:
"""

var sHashs = ""

#---------------
# getSubmodules
#---------------
proc getSubModules(cmd:string) =
  for dir in libDirs:
    let fullLibPath = LIBS_DIR & "/" & dir
    if fullLibPath.dirExists:
      let d = absolutePath(fullLibPath)
      var (sHash, _) = execCmdEx(cmdGetHash, workingDir=d)
      sHash = sHash.strip(leading=true, trailing=true, chars={'\'', '\n'})
      sHashs &= &"\t(cd $(EXT_LIBS_DIR)/{dir}; git checkout {sHash})\n"

  writefile("Makefile", sOutHeader & sHashs)

#------
# main
#------
var cmd:string
if commandLineParams().len >= 2:
  cmd = commandLineParams()[1]
getSubModules(cmd)
